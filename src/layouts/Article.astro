---
import type { CollectionEntry } from "astro:content"
import BaseLayout from "./BaseLayout.astro"
import getPalette from "$utils/palettes"
import ArticleHeader from "$components/ArticleHeader.astro"
import TableOfContents from "$components/TableOfContents.astro"
import type { MarkdownHeading } from "astro"
import "src/styles/articles.scss"

export interface Props {
	article: CollectionEntry<"blog"> | CollectionEntry<"pages">
	headings: MarkdownHeading[]
}

const { article, headings } = Astro.props
const data = article.data
const date = "date" in data ? data.date : undefined
const wide = "categories" in data && data.categories.includes("Photos")
const customLayout = "customLayout" in data && data.customLayout
const ogImage = data.opengraph || data.image
const coverImage = data.cover && data.image ? data.image : undefined
const palette = getPalette(data.palette)
// CSS variables
const headingsFont = palette.headingsFont
const secondaryColor = palette.secondaryColor
const specialColor = palette.specialColor
const backgroundColor = palette.backgroundColor
const mentionColor = palette.mentionColor || "rgb(229 231 235)"
const mentionHoverColor = palette.mentionHoverColor || "rgb(209 213 219"
const color = palette.mainColor
const fontFamily = palette.mainFont
const fontSize = palette.fontSize || "initial"
const lineHeight = palette.lineHeight || 1.25
---

<BaseLayout
	ogType="article"
	title={data.title}
	description={data.description}
	date={date}
	image={ogImage?.src}
	bg={palette.backgroundColor}
	layout={data.layouts}
>
	<div class="article-styling">
		{
			!customLayout && (
				<ArticleHeader
					title={data.title}
					description={data.description}
					date={date}
					cover={coverImage}
					palette={palette}
					wide={wide}
					anchorTop={data.imageAnchorTop}
				/>
			)
		}
		<main
			class:list={{ "px-[80px] pb-16 medium:px-[40px] small:px-[20px]": !customLayout }}
			class="font-[family-name:--fontFamily] text-[length:--fontSize] leading-[--lineHeight] text-[color:--color]"
		>
			<div
				class:list={[
					{ "blog-article m-auto": !customLayout },
					{ "max-w-prose": !customLayout && !wide },
					{ "max-w-[700px]": wide },
				]}
			>
				{
					article.data.toc && (
						<TableOfContents headings={headings} depth={article.data.depth} />
					)
				}
				<slot />
			</div>
		</main>
	</div>
</BaseLayout>

<script>
	import mediumZoom from "medium-zoom"
	window.myMediumZoom = mediumZoom("[data-zoomable]", {
		margin: 24,
		background: "var(--bg)",
	})
</script>

<style lang="scss" define:vars={{ headingsFont }} is:global>
	.article-styling {
		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			font-family: var(--headingsFont);
		}
	}
</style>

<style
	define:vars={{
		color,
		secondaryColor,
		specialColor,
		fontFamily,
		fontSize,
		lineHeight,
		mentionColor,
		mentionHoverColor,
	}}
	is:global
>
	blockquote,
	.note,
	.license,
	hr,
	.special-color {
		color: var(--specialColor);
	}
	figcaption,
	.secondary-color {
		color: var(--secondaryColor);
	}
	.text-normal-size {
		font-size: var(--fontSize);
	}
	.bg-mention {
		background-color: var(--mentionColor);
	}
	.bg-mention:hover {
		background-color: var(--mentionHoverColor);
	}
</style>
