---
import BaseLayout from "$layouts/BaseLayout.astro"
import getBlogPosts from "$utils/getCollection"
import getUniqueValuesAndOccurences from "$utils/getUniqueValuesAndOccurences"

export async function getStaticPaths() {
	const allArticles = await getBlogPosts()
	const rawCategories = allArticles.map((article) => article.data.categories)

	const categories = getUniqueValuesAndOccurences(rawCategories)

	return Object.entries(categories).map(([category, amount], i) => {
		const filteredArticles = allArticles.filter(
			(article) => article.data.categories && article.data.categories.includes(category)
		)
		return {
			params: { category },
			props: { articles: filteredArticles, categories },
		}
	})
}

type Props = {
	title: string
	type?: "Catégories" | "Tags" | "Lieux"
	animation: "categories" | "tags" | "places"
}
const { title, type, animation } = Astro.props

const paths = { Catégories: "/categories", Tags: "/tags", Lieux: "/blog/places" }
const path = type && paths[type]
---

<BaseLayout
	ogType="website"
	title={title}
	font="Sofia Sans"
	navBarProps={{ title: title, parent: { title: "Blog", href: "/" } }}
	bg={{ light: "white", dark: "black" }}
>
	<div transition:animate="initial">
		<header class="mx-auto my-10 mb-12 max-w-[500px] px-5">
			<h2 class="text-sm uppercase text-neutral-600 dark:text-neutral-300">
				<a href="/blog" class="hover:text-black dark:hover:text-white"> Blog </a>
				/
				{
					path && (
						<>
							<a href={path} class="hover:text-black dark:hover:text-white">
								{type}
							</a>
							/
						</>
					)
				}
			</h2>
			<h1 class="text-2xl leading-snug text-black dark:text-white" style={{ fontFamily: "Louize" }}>
				<span>{title}</span>
			</h1>
			{
				Astro.slots.has("tags") && (
					<div class="mt-3">
						<slot name="tags" />
					</div>
				)
			}
		</header>
		<main class="flex flex-col overflow-hidden">
			<slot />
		</main>
	</div>
</BaseLayout>
