---
import { CollectionEntry, getCollection } from "astro:content"
import PlacesLayout from "$layouts/PlacesLayout.astro"
import PlacesList from "$components/places/PlacesList.astro"
import { getPlacesData } from "$utils/remoteData"
import { getDiary } from "$utils/getBlogPosts"

export async function getStaticPaths() {
	const entries = await getDiary()
	return entries.map((entry) => ({
		params: { diary: entry.finalSlug },
		props: { entry },
	}))
}

export interface Props {
	entry: CollectionEntry<"diary">
}
const { entry } = Astro.props

const { Content, headings } = await entry.render()
const data = entry.data

const apiKey = import.meta.env.GOOGLE_MAPS_TOKEN

const googleMapsData = await getPlacesData(new URL(`../../../public/`, import.meta.url).href)

const placesCollection = await getCollection("places")

const places = data.places
	.map((slug) => placesCollection.find((p) => p.slug == slug))
	.map((place) => ({
		...place,
		slug: place.slug.split("/")[1],
		maps: googleMapsData.find((p) => p.place_id == place.data.id),
	}))
---

<PlacesLayout ogType="article" title={data.title}>
	<div class="m-auto max-w-xl pb-8 text-zinc-900">
		<header class="flex justify-between px-8 pb-8 pt-10 font-work-sans text-sm text-zinc-400">
			<p>
				<a href="/diary" class="hover:text-amber-700">‚Üê Journal</a>
			</p>
		</header>
		<main
			class="prose-quoteless prose prose-sm prose-zinc px-8 prose-blockquote:font-normal prose-blockquote:not-italic"
		>
			<h1>{data.title}</h1>
			<div class="not-prose -mx-6">
				<PlacesList places={places} lat={data.mapLat} lng={data.mapLng} zoom={data.mapZoom} />
			</div>
			<Content />
		</main>
	</div>
</PlacesLayout>

<style is:global>
	.prose .bg-mention {
		@apply bg-zinc-200 hover:bg-zinc-300;
	}
	.prose .bg-mention img {
		@apply mb-[0.2em];
	}
</style>

<script is:inline>
let map

function createMap(event) {
	// the event target is the <div> containing the text, but the eventListener is on the parent <div>
	const mapDiv = event.target.parentNode
	mapDiv.removeEventListener("click", createMap)
	mapDiv.classList.add("bg-zinc-100")
	mapDiv.classList.remove("cursor-pointer")
	mapDiv.style.minHeight = "448px"
	mapDiv.style.marginTop = "8px"
	map = new google.maps.Map(mapDiv, {
		mapId: "531454af7b16b9f",
		center: { lat: Number(mapDiv.dataset.lat), lng: Number(mapDiv.dataset.lng) },
		zoom: Number(mapDiv.dataset.zoom),
	})
	// Getting the parent of the map div, which contains all the <a> with places
	const places = Array.from(mapDiv.parentNode.getElementsByClassName("place")).map((place) => ({
		lat: Number(place.dataset.lat),
		lng: Number(place.dataset.lng),
		icon: place.dataset.icon,
		title: place.children[0].textContent,
		href: place.href,
	}))
	places.forEach((place) => {
		const contentString =
			'<div id="content">' +
			'<div id="siteNotice">' +
			"</div>" +
			`<h1 id="firstHeading" class="firstHeading">${place.title}</h1>` +
			'<div id="bodyContent">' +
			`<p><b><a href="${place.href}">Voir la page</a></b></p>` +
			"</div>" +
			"</div>"
		const infowindow = new google.maps.InfoWindow({
			content: contentString,
			ariaLabel: place.title,
		})
		const marker = new google.maps.Marker({
			position: { lat: place.lat, lng: place.lng },
			map,
			title: place.title,
			//icon: place.icon,
		})
		marker.addListener("click", () => {
			infowindow.open({
				anchor: marker,
				map,
			})
		})
	})
}

function initAllMaps() {
	Array.from(document.getElementsByClassName("map")).forEach(function (mapDiv) {
		mapDiv.addEventListener("click", createMap)
	})
}
window.initAllMaps = initAllMaps
</script>

<script
	async
	src=`https://maps.googleapis.com/maps/api/js?key=${apiKey}&region=FR&language=fr&callback=initAllMaps`
></script>
