---
export const prerender = false

import BaseLayout from "$layouts/BaseLayout.astro"
import slugify from "slugify"
import getDatabase from "$utils/notion/getDatabase"
import NotionPageContent from "$components/notion/NotionPageContent.astro"
import type { PagesEntry } from "$utils/notion/wiki"
import formatDate from "$utils/formatting/formatDate"
import { Icon } from "astro-icon/components"

let results = (await getDatabase(import.meta.env.NOTION_WIKI_PAGES_DB)) as PagesEntry[]

const notionPage = results.find(
	(page) =>
		slugify(page.properties.Nom.title[0].plain_text, { remove: /[*+~.()'"!:@«»]/g, lower: true }) ==
		Astro.params.slug
)

if (!notionPage) {
	return new Response(null, {
		status: 404,
		statusText: "Page introuvable",
	})
}

const title = notionPage.properties.Nom.title[0].plain_text
const description =
	notionPage.properties.Description.rich_text[0] &&
	notionPage.properties.Description.rich_text[0].plain_text
const editedTime = notionPage.last_edited_time
---

<BaseLayout
	ssr
	title={title}
	ogType="article"
	bg={{ light: "white", dark: "black" }}
	navBarProps={{ title: title, parent: { title: "Wiki personnel", href: "/wiki" } }}
>
	<div class="prose prose-sm prose-neutral mx-auto mb-16 px-4 dark:prose-invert">
		<header
			class="not-prose flex justify-between pb-8 pt-10 font-work-sans text-sm text-neutral-400"
		>
			<p>
				<a href="/wiki" class="hover:text-neutral-200">← Wiki personnel</a>
			</p>
		</header>
		<main class="">
			<h1>{title}</h1>
			{description && <p class="lead">{description}</p>}
			<div class="not-prose font-work-sans text-sm text-neutral-500">
				<p class="text-neutral-500">
					<Icon name="material-symbols:update-rounded" class="mb-[0.15em] inline-block" />
					{formatDate(new Date(editedTime))}
				</p>
			</div>
			<NotionPageContent id={notionPage.id} />
		</main>
	</div>
</BaseLayout>
