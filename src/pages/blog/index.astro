---
import ArticleCard from "$components/ArticleCard.astro"
import HomeExploreLabel from "$components/HomeExploreLabel.astro"
import TagLabel from "$components/TagLabel.astro"
import BaseLayout from "$layouts/BaseLayout.astro"
import getBlogPosts from "$utils/getBlogPosts"
import getUniqueValuesAndOccurences, {
	getUniquePlacesAndOccurences,
} from "$utils/getUniqueValuesAndOccurences"
import getPlace from "$utils/places"

const articles = await getBlogPosts()

const rawCategories = articles.map((article) => article.data.categories)
const rawTags = articles.map((article) => article.data.tags)
const rawPlaces = articles.map((article) =>
	article.data.places.length > 0 ? [article.data.places[0]] : []
)

const categories = getUniqueValuesAndOccurences(rawCategories)
const tags = getUniqueValuesAndOccurences(rawTags)
const places = getUniquePlacesAndOccurences(rawPlaces)
---

<BaseLayout
	ogType="website"
	title="Blog"
	description="Blog personnel d'Aurélien Dos Santos."
	font="Work Sans"
>
	<div class="mx-auto mb-12 max-w-[500px] px-4">
		<header class="my-12 px-5">
			<div class="my-5 flex w-full place-content-between">
				<span>◂ <a href="/">Accueil</a></span>
				<!--<span><a href="/about">A propos</a></span>-->
			</div>
			<p>
				Bonjour, je suis Aurélien et vous êtes sur mon blog. <br />À propos <a href="/about"
					>de moi</a
				>, <a href="/website">de ce site</a>.
			</p>
			<div class="mt-5">
				<HomeExploreLabel href="/categories" name="Catégories" />
				<p>
					{
						Object.entries(categories).map(([key, value], i) => (
							<>
								<TagLabel label={key} count={value} type={"category"} />{" "}
							</>
						))
					}
				</p>
			</div>
			<div class="mt-5">
				<HomeExploreLabel href="/tags" name="Tags" />
				<p>
					{
						Object.entries(tags).map(([key, value], i) => (
							<>
								<TagLabel label={key} count={value} type={"tag"} />{" "}
							</>
						))
					}
				</p>
			</div>
			<div class="mt-5">
				<HomeExploreLabel href="/places" name="Lieux" />
				<p>
					{
						Object.entries(places).map(([key, value], i) => (
							<>
								<TagLabel
									label={getPlace(key)?.customTitle || ""}
									slug={key}
									count={value}
									type="place"
								/>{" "}
							</>
						))
					}
				</p>
			</div>
		</header>
		<main class="flex flex-col gap-4 dark:gap-8">
			{articles.map((article) => <ArticleCard article={article} />)}
		</main>
	</div>
</BaseLayout>

<style>
	a {
		@apply bg-slate-200 hover:bg-slate-300 active:bg-slate-400 dark:bg-slate-800 dark:hover:bg-slate-700 dark:active:bg-slate-600;
	}
</style>

<style is:global>
	@tailwind base;
	@tailwind components;
	@tailwind utilities;
</style>
