---
import { type CollectionEntry, getCollection } from "astro:content"
import Article from "$layouts/Article.astro"
import NavbarAccessFooter from "$components/NavbarAccessFooter.astro"
import Tufte from "$layouts/Tufte.astro"
import ArticleReferences from "$components/ArticleReferences.astro"
import { Layouts } from "$utils/layouts"

export async function getStaticPaths() {
	const blogEntries = await getCollection("blog", ({ data }) => {
		return !data.draft || import.meta.env.DEV
	})
	return blogEntries.map((article) => ({
		params: { blog: article.slug },
		props: { article },
	}))
}

interface Props {
	article: CollectionEntry<"blog">
}

const { article } = Astro.props
const { Content, headings } = await article.render()
const data = article.data
---

{
	data.layouts.includes(Layouts.tufte) ? (
		<Tufte article={article}>
			<Content />
		</Tufte>
	) : (
		<Article article={article} headings={headings}>
			<Content />
			<ArticleReferences article={article} />
			{data.license && (
				<>
					<hr />
					<p class="license">{data.license}</p>
				</>
			)}
			{!data.customLayout && <NavbarAccessFooter palette={data.palette} />}
		</Article>
	)
}
