---
import EntryCardMinimal from "$components/blog/EntryCardMinimal.astro"
import Explore from "$layouts/Explore.astro"
import { type CollectionEntry } from "astro:content"
import { getContentEntries } from "$utils/getCollection"
import { getCollection } from "astro:content"
import TagsList from "$components/tags/TagsList.astro"
import { dateSort } from "$utils/sort"

export async function getStaticPaths() {
	const content = (await getContentEntries()).sort((a, b) => dateSort(a.data.date, b.data.date))
	const tags = await getCollection("tags")
	return tags.map((tag) => ({
		params: { tag: tag.id },
		props: { content, currentTag: tag },
	}))
}

type Props = {
	content: Awaited<ReturnType<typeof getContentEntries>>
	currentTag: CollectionEntry<"tags">
}
const { content, currentTag } = Astro.props

const filteredContent = content.filter((entry) =>
	entry.data.tags.find((t) => (typeof t == "string" ? t == currentTag.id : t.id == currentTag.id))
)
---

<Explore title={currentTag.data.title} type="Tags">
	<p slot="tags">
		<TagsList collectionKey="tags" currentEntry={currentTag} {content} />
	</p>
	<main class="flex flex-col">
		{filteredContent.map((entry) => <EntryCardMinimal entry={entry} />)}
	</main>
</Explore>
