---
import ArticleCardMinimal from "$components/blog/ArticleCardMinimal.astro"
import TagLabel from "$components/blog/TagLabel.astro"
import Explore from "$layouts/Explore.astro"
import type { CollectionEntry } from "astro:content"
import getBlogPosts from "$utils/getCollection"
import getUniqueValuesAndOccurences from "$utils/getUniqueValuesAndOccurences"

export async function getStaticPaths() {
	const allArticles = await getBlogPosts()
	const rawTags = allArticles.map((article) => article.data.tags)
	const tags = getUniqueValuesAndOccurences(rawTags)

	return Object.entries(tags).map(([tag, amount]) => {
		const filteredArticles = allArticles.filter((article) => article.data.tags.includes(tag))
		return {
			params: { tag },
			props: { articles: filteredArticles, tags },
		}
	})
}

type Props = {
	articles: CollectionEntry<"blog">[]
	tags: { [k: string]: number }
}

const { tag } = Astro.params
const { articles, tags } = Astro.props
---

<Explore title={tag || ""} type="Tags" animation="tags">
	<p slot="tags">
		{
			Object.entries(tags).map(([key, value]) => (
				<>
					<TagLabel label={key} count={value} type={"tag"} disabled={tag == key} />{" "}
				</>
			))
		}
	</p>
	<main class="flex flex-col">
		{articles.map((article) => <ArticleCardMinimal article={article} />)}
	</main>
</Explore>
