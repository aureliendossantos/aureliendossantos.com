---
import MuseumLayout from "$layouts/MuseumLayout.astro"
import { getCollection, render } from "astro:content"
import Image from "$components/Image.astro"
import AudioPlayer from "$components/museum/AudioPlayer.astro"
import { getDomainName } from "$utils/formatting/formatUrl"
import { checkLocale, langParams, useTranslations } from "$utils/i18n"
import PieceTitle from "$components/museum/PieceTitle.astro"
import PieceAuthor from "$components/museum/PieceAuthor.astro"
import { title, author, formatCustomPeriod } from "$utils/museum"

export async function getStaticPaths() {
	const entries = await getCollection("pieces")
	return langParams.flatMap((lang) =>
		entries.map((entry) => {
			const locale = checkLocale(lang)
			return {
				params: { lang, piece: entry.id },
				props: { entry, t: useTranslations(locale), locale },
			}
		})
	)
}
const { entry, t, locale } = Astro.props
const { Content } = await render(entry)
const data = entry.data
const pieceTitle = title(entry.data.title, locale)

const authorSlug = entry.id.split("/")[0]
// Reasons for the import structure: https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations
const audio =
	data.audio &&
	(data.audioFormat == "flac"
		? (await import(`../../../content/pieces/${authorSlug}/${data.audio}.flac`)).default
		: (await import(`../../../content/pieces/${authorSlug}/${data.audio}.mp3`)).default)
---

<MuseumLayout
	title={`${pieceTitle} · ${data.author ? `${data.author} · ` : ""}${t("m-title")}`}
	ogType="website"
	navBarProps={{
		title: pieceTitle,
		parent: { href: "/museum", title: t("m-museum") },
	}}
>
	<div class="relative">
		<div
			class="absolute py-8 mediumlarge:static"
			style={{ fontFamily: "InterVariable, sans-serif" }}
		>
			<h2 class="text-2xl font-light"><PieceTitle hideIfUntitled piece={entry} /></h2>
			<div class="text-sm"><PieceAuthor piece={entry} /></div>
		</div>
	</div>
	{
		data.image && !data.audio && (
			<div class="flex h-[calc(100svh-28px)] justify-center p-8 medium:px-0">
				<Image
					src={data.image}
					height={2096}
					alt={`${pieceTitle} by ${author(entry, locale)}`}
					class="h-full w-full object-contain"
				/>
			</div>
		)
	}
	{
		data.audio && (
			<div class="m-auto flex w-96 flex-col items-center p-8">
				{data.image && <Image src={data.image} width={640} alt="Album cover" />}
				<AudioPlayer
					src={audio}
					format={data.audioFormat!}
					title={pieceTitle}
					author={author(entry, locale)}
				/>
			</div>
		)
	}
	<div class="grid grid-cols-2 items-start py-16 mediumlarge:grid-cols-1 mediumlarge:text-sm">
		<div class="markdown">
			<Content />
		</div>
		<table class="col-start-2 mediumlarge:col-auto">
			{
				typeof data.title == "object" ? (
					<>
						<th>
							{t("m-original-title")} ({data.title.original})
						</th>
						<td>{data.title[data.title.original]}</td>
						{Object.keys(data.title)
							.filter((key) => key != "original" && key != data.title.original)
							.map((key) => (
								<tr>
									<th>({key})</th>
									<td>{data.title[key]}</td>
								</tr>
							))}
					</>
				) : (
					<tr>
						<th>{t("m-original-title")}</th>
						<td>
							<PieceTitle piece={entry} />
						</td>
					</tr>
				)
			}
			{
				typeof data.author == "object" ? (
					<>
						<th>
							{t("m-author")} ({data.author.original})
						</th>
						<td>{data.author[data.author.original]}</td>
						{Object.keys(data.author)
							.filter((key) => key != "original" && key != data.author.original)
							.map((key) => (
								<tr>
									<th>({key})</th>
									<td>{data.author[key]}</td>
								</tr>
							))}
					</>
				) : (
					<tr>
						<th>{t("m-author")}</th>
						<td>{data.author || t("m-unknown author")}</td>
					</tr>
				)
			}
			{
				data.date && (
					<tr>
						<th>Date</th>
						<td>{formatCustomPeriod(data.date, locale)}</td>
					</tr>
				)
			}
			{
				data.album && (
					<tr>
						<th>Album</th>
						<td>{data.album}</td>
					</tr>
				)
			}
			<tr>
				<th>Type</th>
				<td>{t(data.type)}</td>
			</tr>
			{
				data.technique && (
					<tr>
						<th>Technique</th>
						<td>{t(data.technique)}</td>
					</tr>
				)
			}
			{
				data.style && (
					<tr>
						<th>Style</th>
						<td>{data.style}</td>
					</tr>
				)
			}
			<tr><th class="text-sm uppercase">Media Info</th></tr>
			{
				data.image && (
					<tr>
						<th>Image Format</th>
						<td>{data.image.format}</td>
					</tr>
				)
			}
			{
				data.audioFormat && (
					<tr>
						<th>Audio Format</th>
						<td>{data.audioFormat}</td>
					</tr>
				)
			}
			{
				data.fileSource && (
					<tr>
						<th>File Source</th>
						<td class="truncate">
							<a href={data.fileSource}>{getDomainName(data.fileSource)}</a>
						</td>
					</tr>
				)
			}
		</table>
	</div>
</MuseumLayout>

<style>
	th {
		font-family: "Space Mono", monospace;
		padding-right: 1em;
		@apply text-right font-normal leading-7 text-[--800];
	}
</style>

<style is:global>
	.markdown {
		p,
		figure {
			@apply mb-[1lh];
		}
		blockquote {
			@apply italic text-[--800];
		}
		a {
			@apply text-[--800] underline hover:text-[--900];
		}
	}
</style>
