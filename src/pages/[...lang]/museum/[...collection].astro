---
import MuseumLayout from "$layouts/MuseumLayout.astro"
import { getCollection, type CollectionEntry } from "astro:content"
import Image from "$components/Image.astro"
import { langParams, useTranslations } from "$utils/i18n"

export async function getStaticPaths() {
	const collections = await getCollection("collections")
	const pieces = await getCollection("pieces")
	return langParams.flatMap((lang) =>
		collections.map((collection) => ({
			params: { lang, collection: collection.slug },
			props: {
				collection,
				pieces: pieces.filter((piece) =>
					piece.data.collections.map((c) => c.slug).includes(collection.slug)
				),
				t: useTranslations(lang),
			},
		}))
	)
}
const { collection, pieces, t } = Astro.props
const { Content } = await collection.render()
const data = collection.data
---

<MuseumLayout
	title={`${data.title} Â· Personal Museum of Arts and Culture`}
	ogType="website"
	navBarProps={{ title: data.title, parent: { href: "/museum", title: "Museum" } }}
>
	<div class="mb-8 py-8" style={{ fontFamily: "InterVariable, serif" }}>
		<h2 class="text-2xl font-light">{data.title}</h2>
	</div>
	<Content />
	<div class="flex flex-wrap gap-8">
		{
			pieces.map((p) => (
				<a href={`/museum/${p.slug}`} class="w-64 xl:w-48 medium:w-32">
					<div class="h-64 xl:h-48 medium:h-32">
						{p.data.image && (
							<Image
								src={p.data.image}
								alt={`${p.data.title || "Untitled work"} by ${p.data.author || "unknown author"}`}
								class="h-full w-full object-contain"
								notZoomable
							/>
						)}
					</div>
					<div class="py-4 text-center">
						<h3 class="text-md font-light">
							{p.data.title != false ? p.data.title || "Unknown" : "Untitled"}
						</h3>
						<p class="text-xs">{p.data.author}</p>
					</div>
				</a>
			))
		}
	</div>
</MuseumLayout>
