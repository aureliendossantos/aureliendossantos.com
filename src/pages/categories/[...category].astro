---
import ArticleCardMinimal from "$components/blog/ArticleCardMinimal.astro"
import TagLabel from "$components/blog/TagLabel.astro"
import Explore from "$layouts/Explore.astro"
import type { CollectionEntry } from "astro:content"
import getBlogPosts from "$utils/getCollection"
import getUniqueValuesAndOccurences from "$utils/getUniqueValuesAndOccurences"

export async function getStaticPaths() {
	const allArticles = await getBlogPosts()
	const rawCategories = allArticles.map((article) => article.data.categories)
	const categories = getUniqueValuesAndOccurences(rawCategories)

	return Object.entries(categories).map(([category, amount]) => {
		const filteredArticles = allArticles.filter((article) =>
			article.data.categories.includes(category)
		)
		return {
			params: { category },
			props: { articles: filteredArticles, categories },
		}
	})
}

type Props = {
	articles: CollectionEntry<"blog">[]
	categories: { [k: string]: number }
}

const { category } = Astro.params
const { articles, categories } = Astro.props
---

<Explore title={category || ""} type="CatÃ©gories" animation="categories">
	<div class="mt-3" slot="header">
		<p>
			{
				Object.entries(categories).map(([key, value]) => (
					<>
						<TagLabel label={key} count={value} type={"category"} disabled={category == key} />{" "}
					</>
				))
			}
		</p>
	</div>
	<main class="flex flex-col shadow">
		{articles.map((article) => <ArticleCardMinimal article={article} />)}
	</main>
</Explore>
