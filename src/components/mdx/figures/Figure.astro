---
import Image from "$components/Image.astro"
import type { ImageQuality } from "astro"

export interface Props {
	src: ImageMetadata | Promise<{ default: ImageMetadata }>
	alt?: string
	caption?: string
	rounded?: boolean
	shadow?: boolean
	paper?: boolean
	resolution: "third" | "half" | "normal" | "high"
	percentWidth?: number
	zoomQuality?: ImageQuality
}
const {
	src: srcToResolve,
	alt,
	caption,
	rounded,
	shadow,
	paper,
	resolution,
	percentWidth,
	zoomQuality,
	...attributes
} = Astro.props

const src = "then" in srcToResolve ? (await srcToResolve).default : srcToResolve

function getMaxWidth() {
	switch (resolution || "high") {
		case "third":
			return 640
		case "half":
			return 960
		case "normal":
			return 1280
		case "high":
			return 1920
	}
}

const imgWidth = Math.min(src.width, getMaxWidth())
---

<figure class="h-full" style={{ maxWidth: percentWidth && `${percentWidth}%` }}>
	<Image
		src={src}
		width={imgWidth}
		zoomQuality={zoomQuality}
		alt={alt || ""}
		class:list={{ "rounded-md": rounded, shadow: shadow }}
		{...attributes}
	/>
	{
		Astro.slots.has("default") && (
			<figcaption>
				<div>
					<slot />
				</div>
			</figcaption>
		)
	}
	{
		caption && (
			<figcaption>
				<div>
					<slot>{caption}</slot>
				</div>
			</figcaption>
		)
	}
</figure>
