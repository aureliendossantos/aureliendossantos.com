---
import RefBlock from "$components/RefBlock.astro"
import { getClosedStatus, getGoogleImage, getPlace } from "$utils/remoteData/googleMaps"

interface Props {
	id: string
	big?: boolean
	gallery?: boolean
}
const { id, big, gallery } = Astro.props

const place = await getPlace(id)

const infos = []
if (place.vicinity != place.name) infos.push(place.vicinity)
if (place.editorial_summary) infos.push(place.editorial_summary.overview)
const closedStatus = getClosedStatus(place)
if (closedStatus) infos.push(closedStatus)
if (place.rating)
	infos.push(
		`${[...Array(Math.round(place.rating))].map(() => "⭐️").join(" ")} (${
			place.user_ratings_total
		} avis)`
	)
const links: [string, string][] = place.website
	? [
			[place.website, place.website],
			["Google Maps", place.url],
		]
	: [["Google Maps", place.url]]
const galleryUrls =
	gallery && place.photos.length >= 3
		? await Promise.all(
				[1, 2, 3].map(async (i) => await getGoogleImage(200, place.photos[i].photo_reference))
			)
		: undefined
const img = await getGoogleImage(big ? 800 : 120, place.photos[0].photo_reference)
---

<RefBlock
	img={img}
	icon={place.icon}
	title={place.name}
	infos={infos}
	links={links}
	big={big}
	gallery={galleryUrls}
/>
