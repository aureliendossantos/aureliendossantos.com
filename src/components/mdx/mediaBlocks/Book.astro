---
import RefBlock from "$components/RefBlock.astro"
import { getCacheOrFetch } from "$utils/cache"
import formatDate from "$utils/formatting/formatDate"

interface Props {
	isbn?: string
	olid?: string
}
const { isbn, olid } = Astro.props
if (!isbn && !olid) throw new Error("You must provide either an ISBN or an OLID")

// TODO: handle errors
const book = await getCacheOrFetch(
	(isbn || olid) as string,
	"openlibrary",
	async () => {
		const result = await fetch(
			`https://openlibrary.org/api/books?bibkeys=${
				isbn ? `ISBN:${isbn}` : `OLID:${olid}`
			}&jscmd=details&format=json`
		).then((response) => response.json())
		// Response format: https://openlibrary.org/dev/docs/api/books
		return Object.values(result)[0] as any
	},
	1
)

const year = formatDate(new Date(book.details.publish_date), true)
const infos = []
if (book.details.subtitle) infos.push(book.details.subtitle)
if (book.details.authors)
	infos.push(book.details.authors.map((author: any) => author.name).join(", "))
infos.push(book.details.publishers ? `${book.details.publishers?.join(", ")} (${year})` : year)
const links = []
if (book.details.isbn_13)
	links.push([`<abbr>ISBN</abbr> ${book.details.isbn_13?.join(", ")}`, false])
links.push(["Open Library", book.info_url])
---

<RefBlock
	img={`https://covers.openlibrary.org/b/isbn/${isbn}-L.jpg`}
	title={book.details.title}
	{infos}
	{links}
/>
