---
import formatDate from "$utils/formatting/formatDate"
import { fetchSpotifyEndpoint, getSpotifyDate } from "$utils/remoteData/spotify"
import SpotifyIcon from "$icons/logos/spotify-icon.svg"

interface Props {
	id: string
	market?: string
	rating: number
}
const { id, market, rating } = Astro.props

console.log(`Getting Spotify data for ID ${id}...`)
const track = await fetchSpotifyEndpoint("tracks", id, market)

const year = formatDate(
	getSpotifyDate(track.album.release_date, track.album.release_date_precision),
	true
)
const seconds = Math.round(track.duration_ms / 1000)
const duration = `${Math.floor(seconds / 60)}:${(seconds % 60).toString().padStart(2, "0")}`
---

<div class="not-prose my-4 flex gap-4">
	<img class="w-20 rounded-md" src={track.album.images[0].url} alt={track.name} />
	<div>
		<h3 class="text-lg font-bold">{track.name}</h3>
		<p>
			{track.artists.map((a) => a.name).join(", ")} ({year})
			<a href={track.external_urls.spotify} class="!bg-transparent !font-medium">
				<SpotifyIcon size="0.9em" class="mb-[0.15em] inline-block" />
				<span class="text-[#1ED760]">{duration}</span>
			</a>
		</p>
		<p>{[...Array(Math.round(rating))].map(() => "⭐️").join(" ")}</p>
	</div>
</div>
