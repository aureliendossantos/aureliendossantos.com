---
import type {
	BlockObjectResponse,
	ChildDatabaseBlockObjectResponse,
	PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints"
import type { BlockObjectResponseWithChildren } from "$utils/notion/getChildren"
import SpotifyTrack from "$components/mdx/SpotifyTrack.astro"
import FortniteFestivalTag from "./FortniteFestivalTag.astro"

interface Props {
	blocks: BlockObjectResponse[] | BlockObjectResponseWithChildren[]
}
const { blocks } = Astro.props

const database = blocks.find(
	(block) => block.type == "child_database"
) as ChildDatabaseBlockObjectResponse & {
	children: PageObjectResponse[]
}

const maps = [
	{
		name: "Inst. principal",
		icon: "🎸",
	},
	{
		name: "Batterie",
		icon: "🥁",
	},
	{
		name: "Chant",
		icon: "🎤",
	},
	{
		name: "Basse",
		icon: "🎸",
	},
]
---

<div class="not-prose">
	{
		database.children.map((page) => {
			const title = page.properties.Nom.title[0].plain_text
			const trackId = page.properties["Spotify ID"].rich_text[0]?.plain_text
			return (
				<div class="mb-12">
					{trackId && trackId.length == 22 ? (
						<SpotifyTrack id={trackId} market="FR" rating={page.properties.Rating.number} />
					) : (
						<h3 class="mb-2 mt-8 text-lg font-bold">{title}</h3>
					)}
					{maps.map(
						(map) =>
							page.properties[map.name].multi_select.length > 0 && (
								<p class="my-2">
									<span class="mr-2">{map.icon}</span>
									<FortniteFestivalTag tags={page.properties[map.name]} />
								</p>
							)
					)}
				</div>
			)
		})
	}
</div>
