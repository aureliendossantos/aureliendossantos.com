---
import { getColor, type Palette } from "$utils/design/palettes"
import ArticleDate from "./ArticleDate.astro"
import MarkdownIt from "markdown-it"
import { getImage } from "astro:assets"
import { Layouts } from "$utils/design/layouts"
import { PaletteName } from "$utils/design/palettes"

interface Props {
	title?: string
	description?: string
	tags?: string[]
	date?: Date
	cover?: ImageMetadata
	palette: Palette
	layouts: Layouts[]
	sidenotes?: boolean
	wide?: boolean
	anchorTop?: boolean
}
const {
	title: t,
	description: d,
	tags,
	date,
	cover,
	palette,
	layouts,
	sidenotes,
	wide,
	anchorTop,
} = Astro.props

const optimizedCover = cover && (await getImage({ src: cover, width: Math.min(1920, cover.width) }))
const cormorant = layouts.includes(Layouts.cormorant)
const louize = palette.name == PaletteName.louize
const tufte = palette.name == PaletteName.tufte

const markdown = new MarkdownIt({ html: true })
const title = t && markdown.renderInline(t)
const description = d && markdown.renderInline(d)
---

<header
	class:list={[
		"text-[length:--font-size] leading-[--line-height] text-[--cover] medium:px-[40px] small:px-[20px] small:text-[length:--sm-font-size] small:leading-[--sm-line-height] dark:text-[--dark-cover]",
		{
			"px-[80px]": !sidenotes,
			"xl:px-[80px]": sidenotes,
			"mb-12 flex min-h-[50vh] bg-cover bg-center pb-8": cover,
		},
	]}
	style={{
		"--cover": cover ? "#fbf8f2" : getColor(palette.secondaryColor),
		"--dark-cover": cover ? "#fbf8f2" : getColor(palette.secondaryColor, "dark"),
		fontFamily: palette.baseFont,
		backgroundImage: optimizedCover
			? `linear-gradient(rgba(56, 48, 28, 0.394), rgba(75, 65, 35, 0.395)), url('${optimizedCover.src}')`
			: "none",
		backgroundPosition: anchorTop ? "top" : "center",
	}}
>
	<div
		class:list={[
			"m-auto",
			{
				"pb-20 pt-20": cormorant,
				"pt-8": !cormorant,
				"max-w-[700px]": wide,
				"max-w-[--page-width]": !wide && !sidenotes,
				"max-w-[calc(var(--page-width)*1.5+4em)] xl:max-w-[--page-width]": sidenotes,
			},
		]}
	>
		<div class:list={{ "max-w-[--page-width]": sidenotes && !tufte }}>
			<h1
				set:html={title}
				class:list={[
					"text-[--h1] dark:text-[--dark-h1]",
					{ "mb-0 !leading-tight": cormorant, "mt-[2.2em]": tufte },
				]}
				style={{
					"--h1": cover ? "#fbf8f2" : getColor(palette.baseColor),
					"--dark-h1": cover ? "#fbf8f2" : getColor(palette.baseColor, "dark"),
					fontFamily: palette.displayFont,
					fontWeight: palette.titleWeight,
					fontStyle: cormorant ? "italic" : undefined,
					fontFeatureSettings: cormorant ? '"ss01" 01, "dlig" 1' : undefined,
					textTransform: louize ? "uppercase" : undefined,
					letterSpacing: louize ? "0.2em" : undefined,
					fontSize: louize ? "1.3em" : tufte ? "2.5em" : undefined,
					marginTop: louize ? "4em" : undefined,
					marginBottom: louize || tufte ? "calc(var(--indent) - 6px)" : undefined,
					lineHeight: louize || tufte ? "1" : undefined,
				}}
			/>
			{
				description && (
					<p
						set:html={description}
						class:list={{
							"!my-[1em]": cormorant,
							"my-0 text-[1.41em] italic leading-tight": tufte,
						}}
						style={{
							fontFamily: cormorant
								? "'Cormorant Upright', Cormorant, serif"
								: tufte
									? '"Source Serif Subhead", "Source Serif", serif'
									: undefined,
						}}
					/>
				)
			}
			{
				date && (
					<p style={{ fontFamily: cormorant ? "'Cormorant Unicase'" : undefined }}>
						<ArticleDate date={date} /> – <a href="/blog">Aurélien Dos Santos</a>
					</p>
				)
			}
		</div>
	</div>
</header>
