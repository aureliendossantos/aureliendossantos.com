---
import { type CollectionEntry } from "astro:content"
import Game from "../mdx/mediaBlocks/Game.astro"
import Book from "../mdx/mediaBlocks/Book.astro"
import getIGDBgames from "$utils/remoteData/igdb"
import { getCacheOrFetch } from "$utils/cache"

interface Props {
	article: CollectionEntry<"blog">
}

const { article } = Astro.props
const data = article.data
const references = [...data.games, ...data.books]

const gamesData = await Promise.all(
	data.games.map(async (slug) => {
		return await getCacheOrFetch(
			slug,
			"igdb",
			async () => {
				return (await getIGDBgames([slug!]))[0]
			},
			1
		)
	})
)
---

{
	references.length > 0 && (
		<>
			<h2>Dans cet article</h2>
			{gamesData.map((data) => (
				<Game data={data} />
			))}
			{data.books.map((id: string) =>
				id.startsWith("OL") ? <Book olid={id} /> : <Book isbn={id} />
			)}
		</>
	)
}
