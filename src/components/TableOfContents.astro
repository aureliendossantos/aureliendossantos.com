---
import type { MarkdownHeading } from "astro"
import TocHeading from "./TocHeading.astro"

interface Props {
	headings: MarkdownHeading[]
	depth: number | undefined
}
const { headings, depth } = Astro.props

const toc = buildToc(headings)

// Source: https://kld.dev/building-table-of-contents/
// Takes the flat array of headings and return a nested array.
// See also similar implementation from the Astro Docs:
// https://github.com/withastro/docs/blob/882e0b0a9d16d1c822cb8c230a62a4bfcd308605/src/util/generateToc.ts
function buildToc(headings: MarkdownHeading[]) {
	const toc = []
	const parentHeadings = new Map()
	headings.forEach((h) => {
		const heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 2) {
			toc.push(heading)
		} else if (!depth || heading.depth <= depth) {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading)
		}
	})
	return toc
}
---

<nav class="toc">
	<ol class="pl-0 medium:pl-[40px]">
		{toc.map((heading) => <TocHeading heading={heading} />)}
	</ol>
</nav>
