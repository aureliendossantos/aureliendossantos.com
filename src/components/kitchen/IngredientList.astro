---
import IngredientCard from "./IngredientCard.astro"
import { type CollectionEntry } from "astro:content"
import ClipboardButton from "./ClipboardButton.astro"

/**
 * @param inRecipe In a recipe, buttons are displayed to copy the ingredient list to the
 * clipboard. Also, the list is displayed in a 2-column grid on mobile, without images.
 */
interface Props {
	ingredients: CollectionEntry<"ingredients">[]
	quantities?: (string | null | undefined)[]
	inRecipe?: boolean
}
const { inRecipe } = Astro.props

const ingredients = Astro.props.ingredients.map((ingredient, index) => ({
	...ingredient,
	quantity: Astro.props.quantities && Astro.props.quantities[index],
}))

const ingredientsWithoutIcon = ingredients.filter((ingredient) => !ingredient.data.icon)

const firstIngredientHasIcon = Boolean(ingredients[0].data.icon)

// How many rows are needed to display the list in a 2-column grid on mobile?
const mobileGridRows = Math.ceil(ingredients.length / 2)
// How many columns are needed to display ingredients without icon in a 3-row grid list?
const noIconSectionCols = Math.ceil(ingredientsWithoutIcon.length / 3)

const clipboardIngredients = ingredients.map((ingredient) => {
	return ingredient.data.title + (ingredient.quantity ? ` : ${ingredient.quantity}` : "")
})
const googleKeep = clipboardIngredients.join("\n")
const notion = clipboardIngredients.map((ingredient) => `- [ ] ${ingredient}`).join("\n")
---

<div
	class:list={[
		"not-prose grid grid-flow-row-dense grid-cols-6 gap-2 text-center medium:grid-cols-5",
		{
			"small:grid-cols-4": !inRecipe,
			"small:grid-flow-col small:grid-cols-2 small:grid-rows-[--rows] small:gap-y-1 small:text-left":
				inRecipe,
		},
	]}
	style={{ "--rows": `repeat(${mobileGridRows}, minmax(0, 1fr))` }}
>
	{
		/* This displays either only the items with an icon, or all the items in a 2-column grid when in a recipe on mobile */
	}
	{
		ingredients.map((ingredient) => (
			<IngredientCard
				ingredient={ingredient}
				quantity={ingredient.quantity}
				listOnMobile={inRecipe}
				visibleOnlyOnMobile={inRecipe && !ingredient.data.icon}
				hidden={!inRecipe && !ingredient.data.icon}
			/>
		))
	}
	{/* This displays the iconless items when we're in the view with icons */}
	<div
		class:list={[
			"col-[--cols] grid grid-flow-col grid-cols-subgrid grid-rows-[--rows] gap-2",
			{
				"small:hidden": inRecipe,
				"order-first": !firstIngredientHasIcon,
			},
		]}
		style={{
			"--cols": `span ${noIconSectionCols} / span ${noIconSectionCols}`,
			"--rows": `repeat(${Math.min(3, ingredientsWithoutIcon.length)}, minmax(0, 1fr))`,
		}}
	>
		{
			ingredientsWithoutIcon.map((ingredient) => (
				<IngredientCard
					ingredient={ingredient}
					quantity={ingredient.quantity}
					listOnMobile={inRecipe}
				/>
			))
		}
	</div>
</div>

{
	inRecipe && (
		<div class="mt-2 small:float-right">
			<ClipboardButton
				clipboard={googleKeep}
				notification="Les ingrédients ont été copiés. Vous pouvez\ncoller le texte dans une liste Google Keep."
			>
				Keep
			</ClipboardButton>
			<ClipboardButton
				clipboard={notion}
				notification="Les ingrédients ont été copiés. Vous pouvez\ncoller le texte dans une page Notion."
			>
				Notion
			</ClipboardButton>
		</div>
	)
}
