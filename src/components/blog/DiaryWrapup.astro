---
import ArticleDate from "$components/articles/ArticleDate.astro"
import EntryIcon from "$components/diary/EntryIcon.astro"
import { getDiary } from "$utils/getCollection"
import { getImage } from "astro:assets"

interface Props {
	year: number
}
const { year } = Astro.props as { year: keyof typeof wrapups }

const diary = await Promise.all(
	(await getDiary())
		.filter((entry) => entry.data.highlight)
		.map(async (entry) => ({
			...entry,
			image: entry.data.image && (await getImage({ src: entry.data.image, width: 900 })),
		}))
)
const entries = diary.filter((entry) => entry.year == year)

const wrapups = {
	2023: "2023 est marqué par la fin de mes études mais aussi par un voyage d'une semaine en voiture, que je n'ai pas encore inscrit dans le journal.",
	2022: "2022 fut l'année de mon premier été à Toulouse.",
	2021: "2021 fut la première année où j'ai documenté une escapade dans mon journal.",
}
if (!(year in wrapups)) throw new Error(`Year ${year} not in wrapup`)
---

<div
	class="relative grid w-full grid-cols-3 items-center bg-white text-zinc-900 xl:grid-cols-2 mediumlarge:flex mediumlarge:grid-cols-none mediumlarge:flex-col small:h-80 small:items-start"
>
	{
		entries.map((entry, index) => {
			return (
				<div
					id={`${entry.slug}-image`}
					data-year={year}
					class:list={[
						"h-full w-full mediumlarge:m-auto mediumlarge:h-44 mediumlarge:max-w-md small:absolute small:h-80",
						{ hidden: index > 0 },
					]}
					style={{
						backgroundImage: entry.image && `url(${entry.image.src})`,
						backgroundSize: "cover",
						backgroundPosition: entry.data.imageAnchorTop ? "top" : "center",
					}}
				/>
			)
		})
	}
	<div class="flex justify-center small:absolute small:bottom-6">
		<div
			class:list={[
				"ml-8 mr-16 flex min-w-[20rem] max-w-xs flex-col 2xl:ml-7 2xl:mr-14 2xl:min-w-[17.5rem] 2xl:max-w-[17.5rem] xl:mt-11 small:mx-2",
			]}
		>
			<div class="order-2">
				<h2 class="mb-2 mt-8 text-2xl font-bold 2xl:text-xl xl:mt-0">
					<span class="bg-white box-decoration-clone px-2 py-1">{year} dans mon journal</span>
				</h2>
			</div>
			<div class="order-3 -mx-8 mb-8 flex flex-col small:mx-0 small:mb-0 small:items-start">
				{
					entries.map((entry) => (
						<a
							id={`${entry.slug}-link`}
							data-year={year}
							class="diary-entry bg-white px-8 py-2 text-sm text-zinc-700 transition-colors hover:bg-zinc-100 small:px-2 small:py-1"
							href={`/diary/${entry.finalSlug}`}
							data-category={entry.category}
						>
							<div class="font-medium">
								{entry.data.draft && "[Draft] "}
								{entry.data.title}
								<EntryIcon entry={entry} />
							</div>
							{entry.data.date && (
								<div>
									<ArticleDate noYear date={entry.data.date} endDate={entry.data.end} />
								</div>
							)}
						</a>
					))
				}
			</div>
		</div>
	</div>
	<div class="flex justify-center xl:hidden">
		<p
			class="my-14 ml-8 mr-16 min-w-[20rem] max-w-[20rem] 2xl:my-12 2xl:min-w-[17.5rem] 2xl:max-w-[17.5rem] 2xl:text-sm"
		>
			{wrapups[year]}
		</p>
	</div>
</div>
