---
import { Icon } from "astro-icon/components"

export interface Props {
	id?: string
	label: "number" | "symbol" | "plus" | "none"
	/** Can the label toggle an input? */
	toggle?: boolean
	/** If there is a toggle, is the sidenote visible by default? */
	visible?: boolean
}
let { id, label, toggle, visible } = Astro.props
id ??= crypto.randomUUID()
// If `toggle` is false, the id won't be given to the label, so clicking on it won't do anything. The input has to stay in the page for the CSS to work.
const hasPlusIcon = toggle && label != "number"
---

<input id={toggle ? id : null} type="checkbox" checked={visible} class="peer hidden" /><label
	for={toggle ? id : null}
	class:list={[
		"sidenote-label",
		{
			"xl:cursor-pointer": toggle,
			"mobile-touch": toggle && label == "number",
			"sidenote-number": label == "number",
			"sidenote-symbol": label == "symbol",
			hidden: label == "none" || label == "plus",
			"xl:inline-block": label == "plus",
			"has-plus-icon": hasPlusIcon,
		},
	]}
	>{
		hasPlusIcon && (
			<Icon
				name="mdi:plus-circle-outline"
				class:list={[
					"align-top text-[0.7em] text-[--special-color]",
					{ "hidden xl:inline": label == "symbol" },
				]}
			/>
		)
	}</label
>
